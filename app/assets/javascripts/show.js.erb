// map
function initMap() {
  var coordinates = coords();
  var map = new google.maps.Map(document.getElementById('map'), {
    center: coordinates,
    zoom: 13
  });

  var marker = new google.maps.Marker({
    position: coordinates,
    map: map,
    icon: 'https://maps.google.com/mapfiles/ms/icons/yellow-dot.png'
  });

  var geocoder = new google.maps.Geocoder;
  geocoder.geocode({'location': coordinates}, loadDash);

  var restaurants = $('#restaurants').data('restaurants');

  for (var i = 0; i < restaurants.length; i++) {
    var restaurantHash = restaurants[i]['hash'];

    var contentString =
      '<div class="restaurant">' +
      '<h5><a href=' + restaurantHash['url'] + '>' + restaurantHash['name'] + '</a></h5>' +
      '<p>' + restaurantHash['location']['display_address'][0] + '</p>' +
      '<p>' + restaurantHash['location']['display_address'][1] + '</p>' +
      '<ul>' +
      '<li><img src=' + restaurantHash['rating_img_url'] + '></li>' +
      '<li> ' + restaurantHash['review_count'] + ' reviews' + '</li>' +
      '</ul>' +
      '</div>';

    eval("infowindow" + i + " = " + "new google.maps.InfoWindow({ content: contentString })");

    var rest_coord = {
      lat: restaurantHash['location']['coordinate']['latitude'],
      lng: restaurantHash['location']['coordinate']['longitude']
    };

    eval("marker" + i + "=" + "new google.maps.Marker({" +
      "position: rest_coord," +
      "map: map," +
      "title: restaurantHash['name']" +
    "})");

    eval("marker" + i + ".addListener('click', function() {" +
         "infowindow" + i + ".open(map, marker" + i + ");" +
    "});");
  };
}

// lat, lng
function coords() {
  return { lat: $('#coordinates').data('lat'),
           lng: $('#coordinates').data('lng') };
}

// load details to dashboard
function loadDash(results, status) {
  if (status === 'OK') {
    var components = results[1]['address_components'];
  }

  var city;
  var state;
  components.forEach(function(address_obj) {
    for (var prop in address_obj) {
      if (prop === 'types') {
        if (address_obj[prop].indexOf('locality') !== -1) {
          city = address_obj['long_name'];
        } else if (address_obj[prop].indexOf('administrative_area_level_1') !== -1) {
          state = address_obj['short_name'];
        }
      }
    }
  });

  postCityState(city, state);
  currentConditions(city, state);
}

function postCityState(city, state) {
  $.ajax({ url: "/city_state",
           type: "POST",
           data: { city: city,
                   state: state },
           error: function(message) {
              console.error(message);
           }
         });
}

// weather
function currentConditions(city, state) {
  var cityName = city.indexOf(" ") !== -1 ? city.replace(" ", "_") : city;

  $.ajax({
    url: "https://api.wunderground.com/api/20e32ff3e81ba1e5/geolookup/conditions/q/" + state + "/" + cityName + ".json",
    dataType: "jsonp",
    success: temp
  });
}

// post current temp
function temp(parsed_json) {
  var temp_f = parsed_json['current_observation']['temp_f'];
  $.ajax({ url: "/current_conditions",
           type: "POST",
           data: { temp_f: temp_f },
           error: function(message) {
              console.error(message);
           }
         });
}

function drinkRestaurants() {
  $.ajax({ url: "/drink",
           type: "POST",
           data: { drink: $('#recommended').text() },
           success: dropdownItemSelect,
           error: function(message) {
              console.error(message);
           }
         });
}

function dropdownItemSelect() {
  $('.dropdown-menu').children().children().on("click", updateRecommended);
}

function updateRecommended() {
  var drink_type = { drink_type: $(this).text() };
  $.ajax({  url: "/drink",
            type: "POST",
            data: drink_type,
            error: function(message) {
                console.error(message);
            }
        });
  $('#recommended').text(drink_type['drink_type']);
}

$(document).ready(function() {
  drinkRestaurants();
});
